{
  "openapi": "3.1.0",
  "info": {
    "title": "Owlin API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/upload": {
      "post": {
        "summary": "Upload Invoice",
        "description": "Upload and process invoice with robust error handling and fallback logic.",
        "operationId": "upload_invoice_api_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_invoice_api_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/files": {
      "get": {
        "summary": "List Uploaded Files",
        "description": "List all uploaded files with their metadata.",
        "operationId": "list_uploaded_files_api_files_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/files/{document_id}/preview": {
      "get": {
        "summary": "Preview File",
        "description": "Preview a specific uploaded file by document ID.",
        "operationId": "preview_file_api_files__document_id__preview_get",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "summary": "Api Health Check",
        "operationId": "api_health_check_api_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/audit/last": {
      "get": {
        "summary": "Get Last Audit",
        "description": "Development-only endpoint to inspect last upload audit.",
        "operationId": "get_last_audit_api_audit_last_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/test-ocr": {
      "get": {
        "summary": "Test Ocr",
        "description": "Test OCR engine directly",
        "operationId": "test_ocr_api_test_ocr_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Test Ocr",
        "description": "Test OCR processing on uploaded file.\n\nArgs:\n    file: Uploaded file to process\n    \nReturns:\n    OCR results with timing and confidence information",
        "operationId": "test_ocr_api_test_ocr_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_test_ocr_api_test_ocr_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/upload/review": {
      "post": {
        "summary": "Upload For Review",
        "description": "Upload a PDF for smart processing and review.\nThis endpoint can handle multi-invoice PDFs and intelligently split them.",
        "operationId": "upload_for_review_api_upload_review_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_for_review_api_upload_review_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/upload/confirm-splits": {
      "post": {
        "summary": "Confirm Document Splits",
        "description": "Confirm document splits and save to database.",
        "operationId": "confirm_document_splits_api_upload_confirm_splits_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmSplitsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/invoices/": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Get Invoices",
        "description": "Get all invoices with optional filtering.",
        "operationId": "get_invoices_api_invoices__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/invoices/summary": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Get Invoice Summary",
        "description": "Get summary statistics for invoices.",
        "operationId": "get_invoice_summary_api_invoices_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/invoices/{invoice_id}": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Get Invoice Detail",
        "description": "Get detailed invoice information with enhanced error handling.",
        "operationId": "get_invoice_detail_api_invoices__invoice_id__get",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "invoices"
        ],
        "summary": "Delete Invoice",
        "description": "Delete an invoice.",
        "operationId": "delete_invoice_api_invoices__invoice_id__delete",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/invoices/{invoice_id}/pair": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Pair Invoice With Delivery Note",
        "description": "Pair an invoice with a delivery note.",
        "operationId": "pair_invoice_with_delivery_note_api_invoices__invoice_id__pair_post",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invoice Id"
            }
          },
          {
            "name": "delivery_note_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Delivery Note Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/invoices/{invoice_id}/line-item/{row_idx}": {
      "patch": {
        "tags": [
          "invoices"
        ],
        "summary": "Update Line Item",
        "description": "Update a single line item in an invoice",
        "operationId": "update_line_item_api_invoices__invoice_id__line_item__row_idx__patch",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invoice Id"
            }
          },
          {
            "name": "row_idx",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Row Idx"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Update Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/invoices/{invoice_id}/flags": {
      "patch": {
        "tags": [
          "invoices"
        ],
        "summary": "Update Flags",
        "description": "Update flags for an invoice or specific line items",
        "operationId": "update_flags_api_invoices__invoice_id__flags_patch",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invoice Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Flags Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/invoices/{invoice_id}/signatures/extract": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Extract Signatures",
        "description": "Extract signature regions for an invoice",
        "operationId": "extract_signatures_api_invoices__invoice_id__signatures_extract_post",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/invoices/{invoice_id}/verification-status": {
      "patch": {
        "tags": [
          "invoices"
        ],
        "summary": "Update Verification Status",
        "description": "Update the verification status of an invoice",
        "operationId": "update_verification_status_api_invoices__invoice_id__verification_status_patch",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invoice Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Status Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/flagged-issues/": {
      "get": {
        "tags": [
          "flagged-issues"
        ],
        "summary": "Get Flagged Issues",
        "description": "Get all flagged issues with their details.",
        "operationId": "get_flagged_issues_api_flagged_issues__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/flagged-issues/summary": {
      "get": {
        "tags": [
          "flagged-issues"
        ],
        "summary": "Get Flagged Issues Summary",
        "description": "Get summary statistics for flagged issues.",
        "operationId": "get_flagged_issues_summary_api_flagged_issues_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/flagged-issues/{issue_id}/resolve": {
      "post": {
        "tags": [
          "flagged-issues"
        ],
        "summary": "Resolve Flagged Issue",
        "description": "Mark a flagged issue as resolved.",
        "operationId": "resolve_flagged_issue_api_flagged_issues__issue_id__resolve_post",
        "parameters": [
          {
            "name": "issue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Issue Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/flagged-issues/{issue_id}/escalate": {
      "post": {
        "summary": "Post Escalate Issue",
        "operationId": "post_escalate_issue_api_flagged_issues__issue_id__escalate_post",
        "parameters": [
          {
            "name": "issue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Issue Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EscalateIssueRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/flagged-issues/{issue_id}": {
      "get": {
        "tags": [
          "flagged-issues"
        ],
        "summary": "Get Flagged Issue Detail",
        "description": "Get detailed information for a specific flagged issue.",
        "operationId": "get_flagged_issue_detail_api_flagged_issues__issue_id__get",
        "parameters": [
          {
            "name": "issue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Issue Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Patch Flagged Issue",
        "operationId": "patch_flagged_issue_api_flagged_issues__issue_id__patch",
        "parameters": [
          {
            "name": "issue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Issue Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIssueRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/suppliers/": {
      "get": {
        "tags": [
          "suppliers"
        ],
        "summary": "Get Suppliers",
        "description": "Get all suppliers with their basic information.",
        "operationId": "get_suppliers_api_suppliers__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/suppliers/analytics": {
      "get": {
        "tags": [
          "suppliers"
        ],
        "summary": "Get Supplier Analytics",
        "description": "Get comprehensive supplier analytics and performance metrics.",
        "operationId": "get_supplier_analytics_api_suppliers_analytics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/suppliers/{supplier_name}": {
      "get": {
        "tags": [
          "suppliers"
        ],
        "summary": "Get Supplier Detail",
        "description": "Get detailed information for a specific supplier.",
        "operationId": "get_supplier_detail_api_suppliers__supplier_name__get",
        "parameters": [
          {
            "name": "supplier_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Supplier Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/suppliers/{supplier_name}/performance": {
      "get": {
        "tags": [
          "suppliers"
        ],
        "summary": "Get Supplier Performance",
        "description": "Get supplier performance metrics over time.",
        "operationId": "get_supplier_performance_api_suppliers__supplier_name__performance_get",
        "parameters": [
          {
            "name": "supplier_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Supplier Name"
            }
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30,
              "title": "Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/suppliers/summary/overview": {
      "get": {
        "tags": [
          "suppliers"
        ],
        "summary": "Get Suppliers Overview",
        "description": "Get overview statistics for all suppliers.",
        "operationId": "get_suppliers_overview_api_suppliers_summary_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/suppliers/scorecard": {
      "get": {
        "tags": [
          "suppliers"
        ],
        "summary": "Get Supplier Scorecard",
        "description": "Aggregated supplier scorecard metrics.\nReturns an array of objects with:\n  supplier_id, supplier_name, total_invoices, match_rate, avg_invoice_confidence,\n  total_flagged_issues, credit_value_pending, delivery_reliability_score, last_updated",
        "operationId": "get_supplier_scorecard_api_suppliers_scorecard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/analytics/dashboard": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Dashboard Analytics",
        "description": "Get comprehensive dashboard analytics.",
        "operationId": "get_dashboard_analytics_api_analytics_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/analytics/trends": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Analytics Trends",
        "description": "Get trend data over a specified period.",
        "operationId": "get_analytics_trends_api_analytics_trends_get",
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30,
              "title": "Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/performance": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get System Performance",
        "description": "Get system performance metrics.",
        "operationId": "get_system_performance_api_analytics_performance_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/analytics/health": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get System Health",
        "description": "Get system health metrics.",
        "operationId": "get_system_health_api_analytics_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/analytics/spend-summary": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Spend Summary",
        "description": "Total spend for a range with prior period delta.",
        "operationId": "get_spend_summary_api_analytics_spend_summary_get",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "venue",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Venue"
            }
          },
          {
            "name": "supplier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Supplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/spend-by-supplier": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Spend By Supplier",
        "description": "Top suppliers by spend with 'other' bucket.",
        "operationId": "get_spend_by_supplier_api_analytics_spend_by_supplier_get",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "venue",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Venue"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/match-rate": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Match Rate",
        "description": "3-Way match rate breakdown: Passed / Issues / Failed.",
        "operationId": "get_match_rate_api_analytics_match_rate_get",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "venue",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Venue"
            }
          },
          {
            "name": "supplier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Supplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/issues-by-type": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Issues By Type",
        "description": "Issues by type based on invoice_line_items.flagged and source field if available.",
        "operationId": "get_issues_by_type_api_analytics_issues_by_type_get",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "venue",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Venue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/duplicates-summary": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Duplicates Summary",
        "description": "Count potential duplicate invoices and sum of blocked totals (beyond first occurrence).",
        "operationId": "get_duplicates_summary_api_analytics_duplicates_summary_get",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/unmatched-counts": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Unmatched Counts",
        "description": "Counts of paired / needs review / unmatched based on invoice status fields.",
        "operationId": "get_unmatched_counts_api_analytics_unmatched_counts_get",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "venue",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Venue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/low-ocr": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Low Ocr Summary",
        "description": "Count invoices where OCR confidence is below threshold (0-1 or 0-100 tolerant).",
        "operationId": "get_low_ocr_summary_api_analytics_low_ocr_get",
        "parameters": [
          {
            "name": "threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0.7,
              "title": "Threshold"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/volatile-products": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Volatile Products",
        "description": "Top volatile products by price over rolling N days using coefficient of variation (std/mean).",
        "operationId": "get_volatile_products_api_analytics_volatile_products_get",
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 90,
              "title": "Days"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/advanced-dashboard": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Advanced Dashboard Analytics",
        "description": "Get comprehensive advanced dashboard analytics with trends, performance, and insights.",
        "operationId": "get_advanced_dashboard_analytics_api_analytics_advanced_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/analytics/trends/advanced": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Advanced Trends",
        "description": "Get advanced trend analysis with forecasting and insights.",
        "operationId": "get_advanced_trends_api_analytics_trends_advanced_get",
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30,
              "title": "Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/performance/advanced": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Advanced Performance Metrics",
        "description": "Get advanced performance metrics with detailed analysis.",
        "operationId": "get_advanced_performance_metrics_api_analytics_performance_advanced_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/ocr/parse": {
      "post": {
        "summary": "Parse Document",
        "description": "Parse uploaded document using OCR with real-time parsing and structured results",
        "operationId": "parse_document_api_ocr_parse_post",
        "parameters": [
          {
            "name": "confidence_threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 70,
              "title": "Confidence Threshold"
            }
          },
          {
            "name": "debug",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Debug"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_parse_document_api_ocr_parse_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ocr/parse_receipt": {
      "post": {
        "summary": "Parse Receipt Document",
        "description": "Parse uploaded receipt using OCR",
        "operationId": "parse_receipt_document_api_ocr_parse_receipt_post",
        "parameters": [
          {
            "name": "confidence_threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 70,
              "title": "Confidence Threshold"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_parse_receipt_document_api_ocr_parse_receipt_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ocr/parse-receipt": {
      "post": {
        "summary": "Parse Receipt Document Alias",
        "description": "Parse uploaded receipt using OCR (alias endpoint)",
        "operationId": "parse_receipt_document_alias_api_ocr_parse_receipt_post",
        "parameters": [
          {
            "name": "confidence_threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 70,
              "title": "Confidence Threshold"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_parse_receipt_document_alias_api_ocr_parse_receipt_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ocr/classify": {
      "post": {
        "summary": "Classify Document",
        "description": "Classify document type and extract data using OCR.\nReturns document type (invoice, delivery_note, unknown) with confidence score.",
        "operationId": "classify_document_api_ocr_classify_post",
        "parameters": [
          {
            "name": "confidence_threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 70,
              "title": "Confidence Threshold"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_classify_document_api_ocr_classify_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ocr/status": {
      "get": {
        "summary": "Get Ocr Status",
        "description": "Get OCR service status",
        "operationId": "get_ocr_status_api_ocr_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/ocr/check-duplicate": {
      "post": {
        "summary": "Check Duplicate Document",
        "description": "Check if uploaded document is a duplicate of existing documents.\n\nArgs:\n    file: Uploaded document file\n    threshold: Similarity threshold for duplicate detection (0.0 to 1.0)\n\nReturns:\n    JSON response with duplicate detection results",
        "operationId": "check_duplicate_document_api_ocr_check_duplicate_post",
        "parameters": [
          {
            "name": "threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0.95,
              "title": "Threshold"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_check_duplicate_document_api_ocr_check_duplicate_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ocr/enhanced": {
      "post": {
        "summary": "Parse Document Enhanced",
        "description": "Enhanced OCR processing using the improved pipeline with better preprocessing.\n\nThis endpoint uses the enhanced OCR pipeline which includes:\n- Advanced image preprocessing (deskew, noise reduction, thresholding)\n- Structured line item extraction\n- Confidence scoring with review flags\n- Better handling of rotated or poor quality documents",
        "operationId": "parse_document_enhanced_api_ocr_enhanced_post",
        "parameters": [
          {
            "name": "confidence_threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 70,
              "title": "Confidence Threshold"
            }
          },
          {
            "name": "debug",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Debug"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_parse_document_enhanced_api_ocr_enhanced_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/products/available": {
      "get": {
        "summary": "Get Products",
        "description": "Get list of available products for forecasting.",
        "operationId": "get_products_api_products_available_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Products Api Products Available Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/products/forecast/{item_name}": {
      "get": {
        "summary": "Get Product Forecast",
        "description": "Get price forecast for a specific product/item using real forecasting algorithm.\n\nArgs:\n    item_name: Name of the product/item to forecast\n    months_ahead: Number of months to forecast (default: 12)\n\nReturns:\n    Dictionary containing historic and forecast data with confidence bands",
        "operationId": "get_product_forecast_api_products_forecast__item_name__get",
        "parameters": [
          {
            "name": "item_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item Name"
            }
          },
          {
            "name": "months_ahead",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 12,
              "title": "Months Ahead"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Product Forecast Api Products Forecast  Item Name  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/products/forecast-ready/{item_name}": {
      "get": {
        "summary": "Check Forecast Readiness",
        "description": "Check if an item has sufficient data for reliable forecasting.\n\nArgs:\n    item_name: Name of the product/item to check\n\nReturns:\n    Dictionary containing readiness status and diagnostic information",
        "operationId": "check_forecast_readiness_api_products_forecast_ready__item_name__get",
        "parameters": [
          {
            "name": "item_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Check Forecast Readiness Api Products Forecast Ready  Item Name  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/queue": {
      "get": {
        "summary": "Get Documents For Review",
        "description": "Get all documents that need review - now returns real invoice data",
        "operationId": "get_documents_for_review_api_documents_queue_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/documents/invoices": {
      "get": {
        "summary": "Get Invoice Documents",
        "description": "Get all invoice documents for the frontend",
        "operationId": "get_invoice_documents_api_documents_invoices_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/documents/delivery-notes": {
      "get": {
        "summary": "Get Delivery Note Documents",
        "description": "Get all delivery note documents for the frontend",
        "operationId": "get_delivery_note_documents_api_documents_delivery_notes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/documents/approve": {
      "post": {
        "summary": "Approve Document",
        "description": "Approve a document - update its status",
        "operationId": "approve_document_api_documents_approve_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Payload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/escalate": {
      "post": {
        "summary": "Escalate Document",
        "description": "Escalate a document for manual review",
        "operationId": "escalate_document_api_documents_escalate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Payload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{doc_id}": {
      "delete": {
        "summary": "Delete Document",
        "description": "Delete a document",
        "operationId": "delete_document_api_documents__doc_id__delete",
        "parameters": [
          {
            "name": "doc_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Doc Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/ask": {
      "post": {
        "summary": "Ask Agent",
        "description": "Handle agent questions from the frontend.\n\nArgs:\n    user_prompt: User's natural language query\n    user_id: Owlin user ID\n    invoice_id: ID of the invoice they're viewing\n    role: Role of the user (used for permissions and response type)\n\nReturns:\n    {\n        \"markdown\": Agent's written reply (string),\n        \"actions\": Optional structured actions (e.g. suggest_credit),\n        \"confidence\": Confidence score (0\u2013100),\n        \"entities\": Extracted entities (suppliers, amounts, etc.),\n        \"urgency\": Urgency level (low, medium, high)\n    }",
        "operationId": "ask_agent_api_agent_ask_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/ask-with-memory": {
      "post": {
        "summary": "Ask Agent With Memory",
        "description": "Handle agent questions with conversation memory.\n\nThis endpoint includes conversation history for more contextual responses.",
        "operationId": "ask_agent_with_memory_api_agent_ask_with_memory_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/specialized": {
      "post": {
        "summary": "Specialized Agent Task",
        "description": "Handle specialized agent tasks like credit suggestions, email generation, etc.",
        "operationId": "specialized_agent_task_api_agent_specialized_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpecializedAgentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/suggest-credit": {
      "post": {
        "summary": "Suggest Credit Endpoint",
        "description": "Convenience endpoint for credit suggestions.",
        "operationId": "suggest_credit_endpoint_api_agent_suggest_credit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/generate-email": {
      "post": {
        "summary": "Generate Email Endpoint",
        "description": "Convenience endpoint for email generation.",
        "operationId": "generate_email_endpoint_api_agent_generate_email_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/escalate": {
      "post": {
        "summary": "Escalate Issue Endpoint",
        "description": "Convenience endpoint for issue escalation.",
        "operationId": "escalate_issue_endpoint_api_agent_escalate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/health": {
      "get": {
        "summary": "Agent Health Check",
        "description": "Health check endpoint for the agent service.",
        "operationId": "agent_health_check_api_agent_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Agent Health Check Api Agent Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/capabilities": {
      "get": {
        "summary": "Get Agent Capabilities",
        "description": "Get information about agent capabilities and supported features.",
        "operationId": "get_agent_capabilities_api_agent_capabilities_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Agent Capabilities Api Agent Capabilities Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/test-ocr/health": {
      "get": {
        "summary": "Test Ocr Health",
        "description": "Health check for test OCR endpoint.",
        "operationId": "test_ocr_health_api_test_ocr_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/delivery-notes/upload": {
      "post": {
        "summary": "Upload Delivery Notes",
        "operationId": "upload_delivery_notes_api_delivery_notes_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_delivery_notes_api_delivery_notes_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadDNResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/delivery-notes": {
      "get": {
        "summary": "List Delivery Notes",
        "operationId": "list_delivery_notes_api_delivery_notes_get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryNote"
                  },
                  "title": "Response List Delivery Notes Api Delivery Notes Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/match/suggestions": {
      "get": {
        "summary": "Get Suggestions",
        "operationId": "get_suggestions_api_match_suggestions_get",
        "parameters": [
          {
            "name": "delivery_note_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Delivery Note Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 3,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/match/confirm": {
      "post": {
        "summary": "Post Confirm",
        "operationId": "post_confirm_api_match_confirm_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchConfirmRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/match/reject": {
      "post": {
        "summary": "Post Reject",
        "operationId": "post_reject_api_match_reject_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchRejectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/upload/enhanced": {
      "post": {
        "tags": [
          "enhanced-upload"
        ],
        "summary": "Upload Document Enhanced",
        "description": "Enhanced upload endpoint with adaptive processing and comprehensive error recovery\n\nArgs:\n    file: Uploaded file\n    parse_templates: Whether to parse invoice templates\n    save_debug: Whether to save debug artifacts\n    user_role: User role for role-based processing\n    \nReturns:\n    UploadResponse with processing results",
        "operationId": "upload_document_enhanced_api_upload_enhanced_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_document_enhanced_api_upload_enhanced_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/upload/adaptive": {
      "post": {
        "tags": [
          "enhanced-upload"
        ],
        "summary": "Upload Document Adaptive",
        "description": "Adaptive upload endpoint with progress tracking and timeout handling\n\nArgs:\n    file: Uploaded file\n    parse_templates: Whether to parse invoice templates\n    save_debug: Whether to save debug artifacts\n    user_role: User role for role-based processing\n    \nReturns:\n    UploadResponse with processing results",
        "operationId": "upload_document_adaptive_api_upload_adaptive_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_document_adaptive_api_upload_adaptive_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/upload/batch": {
      "post": {
        "tags": [
          "enhanced-upload"
        ],
        "summary": "Upload Batch Enhanced",
        "description": "Enhanced batch upload endpoint for multiple documents\n\nArgs:\n    files: List of uploaded files\n    parse_templates: Whether to parse invoice templates\n    save_debug: Whether to save debug artifacts\n    user_role: User role for role-based processing\n    \nReturns:\n    Dictionary with batch processing results",
        "operationId": "upload_batch_enhanced_api_upload_batch_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_batch_enhanced_api_upload_batch_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Upload Batch Enhanced Api Upload Batch Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/upload/status/{document_id}": {
      "get": {
        "tags": [
          "enhanced-upload"
        ],
        "summary": "Get Upload Status",
        "description": "Get processing status for a document\n\nArgs:\n    document_id: Document ID\n    \nReturns:\n    ProcessingStatus with current status",
        "operationId": "get_upload_status_api_upload_status__document_id__get",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessingStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/upload/{document_id}": {
      "delete": {
        "tags": [
          "enhanced-upload"
        ],
        "summary": "Delete Document",
        "description": "Delete a processed document\n\nArgs:\n    document_id: Document ID\n    \nReturns:\n    Success status",
        "operationId": "delete_document_api_upload__document_id__delete",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Document Api Upload  Document Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/upload/health": {
      "get": {
        "tags": [
          "enhanced-upload"
        ],
        "summary": "Upload Health Check",
        "description": "Health check for upload service\n\nReturns:\n    Health status",
        "operationId": "upload_health_check_api_upload_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Upload Health Check Api Upload Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/matching/upload-pair": {
      "post": {
        "tags": [
          "matching"
        ],
        "summary": "Upload And Match Pair",
        "description": "Upload and immediately match an invoice with a delivery note\n\nArgs:\n    invoice_file: Invoice document file\n    delivery_file: Delivery note document file\n    threshold: Matching threshold (0.0 to 1.0)\n    normalize_descriptions: Whether to normalize descriptions\n    save_debug: Whether to save debug artifacts\n    \nReturns:\n    MatchingResponse with results",
        "operationId": "upload_and_match_pair_api_matching_upload_pair_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_and_match_pair_api_matching_upload_pair_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/matching/pair-existing": {
      "post": {
        "tags": [
          "matching"
        ],
        "summary": "Pair Existing Documents",
        "description": "Pair existing processed documents by ID\n\nArgs:\n    request: PairingRequest with invoice_id and delivery_id\n    \nReturns:\n    PairingResponse with results",
        "operationId": "pair_existing_documents_api_matching_pair_existing_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PairingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PairingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/matching/suggestions/{matching_id}": {
      "get": {
        "tags": [
          "matching"
        ],
        "summary": "Get Matching Suggestions",
        "description": "Get manual review suggestions for a matching result\n\nArgs:\n    matching_id: ID of the matching result\n    \nReturns:\n    Dictionary with suggestions",
        "operationId": "get_matching_suggestions_api_matching_suggestions__matching_id__get",
        "parameters": [
          {
            "name": "matching_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Matching Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Matching Suggestions Api Matching Suggestions  Matching Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/matching/validation/{matching_id}": {
      "get": {
        "tags": [
          "matching"
        ],
        "summary": "Validate Matching Result",
        "description": "Validate and analyze a matching result\n\nArgs:\n    matching_id: ID of the matching result\n    \nReturns:\n    Dictionary with validation metrics and recommendations",
        "operationId": "validate_matching_result_api_matching_validation__matching_id__get",
        "parameters": [
          {
            "name": "matching_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Matching Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Validate Matching Result Api Matching Validation  Matching Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/matching/status/{matching_id}": {
      "get": {
        "tags": [
          "matching"
        ],
        "summary": "Get Matching Status",
        "description": "Get status of a matching operation\n\nArgs:\n    matching_id: ID of the matching operation\n    \nReturns:\n    Dictionary with status information",
        "operationId": "get_matching_status_api_matching_status__matching_id__get",
        "parameters": [
          {
            "name": "matching_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Matching Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Matching Status Api Matching Status  Matching Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/matching/{matching_id}": {
      "delete": {
        "tags": [
          "matching"
        ],
        "summary": "Delete Matching Result",
        "description": "Delete a matching result\n\nArgs:\n    matching_id: ID of the matching result to delete\n    \nReturns:\n    Dictionary with deletion status",
        "operationId": "delete_matching_result_api_matching__matching_id__delete",
        "parameters": [
          {
            "name": "matching_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Matching Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Matching Result Api Matching  Matching Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/validation/check": {
      "post": {
        "tags": [
          "upload-validation"
        ],
        "summary": "Validate Upload File",
        "description": "Validate an uploaded file and optionally process it\n\nThis endpoint performs comprehensive validation including:\n- File type and size validation\n- Duplicate detection (invoice number and file hash)\n- Descriptive naming generation\n- Optional document processing and parsing",
        "operationId": "validate_upload_file_api_validation_check_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_validate_upload_file_api_validation_check_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadValidationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/validation/check-duplicate": {
      "post": {
        "tags": [
          "upload-validation"
        ],
        "summary": "Check Duplicate Invoice Endpoint",
        "description": "Check if an invoice number already exists in the database",
        "operationId": "check_duplicate_invoice_endpoint_api_validation_check_duplicate_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_check_duplicate_invoice_endpoint_api_validation_check_duplicate_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Check Duplicate Invoice Endpoint Api Validation Check Duplicate Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/validation/check-file-hash": {
      "post": {
        "tags": [
          "upload-validation"
        ],
        "summary": "Check Duplicate File Hash Endpoint",
        "description": "Check if a file with the same hash already exists in the database",
        "operationId": "check_duplicate_file_hash_endpoint_api_validation_check_file_hash_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_check_duplicate_file_hash_endpoint_api_validation_check_file_hash_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Check Duplicate File Hash Endpoint Api Validation Check File Hash Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/validation/generate-name": {
      "post": {
        "tags": [
          "upload-validation"
        ],
        "summary": "Generate Invoice Name Endpoint",
        "description": "Generate a descriptive name for an invoice",
        "operationId": "generate_invoice_name_endpoint_api_validation_generate_name_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_generate_invoice_name_endpoint_api_validation_generate_name_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Generate Invoice Name Endpoint Api Validation Generate Name Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/validation/supported-formats": {
      "get": {
        "tags": [
          "upload-validation"
        ],
        "summary": "Get Supported Formats",
        "description": "Get list of supported file formats",
        "operationId": "get_supported_formats_api_validation_supported_formats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Supported Formats Api Validation Supported Formats Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/validation/quick-check": {
      "post": {
        "tags": [
          "upload-validation"
        ],
        "summary": "Quick Validation Check",
        "description": "Perform a quick validation check without database queries",
        "operationId": "quick_validation_check_api_validation_quick_check_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_quick_validation_check_api_validation_quick_check_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Quick Validation Check Api Validation Quick Check Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/validation/status": {
      "get": {
        "tags": [
          "upload-validation"
        ],
        "summary": "Get Validation Status",
        "description": "Get validation system status and configuration",
        "operationId": "get_validation_status_api_validation_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Validation Status Api Validation Status Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/insights/suppliers/{supplier_id}/summary": {
      "get": {
        "tags": [
          "insights"
        ],
        "summary": "Get Summary",
        "operationId": "get_summary_api_insights_suppliers__supplier_id__summary_get",
        "parameters": [
          {
            "name": "supplier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Supplier Id"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Start"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "End"
            }
          },
          {
            "name": "bucket",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "month",
              "title": "Bucket"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsightSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/insights/suppliers/{supplier_id}/timeseries": {
      "get": {
        "tags": [
          "insights"
        ],
        "summary": "Get Timeseries",
        "operationId": "get_timeseries_api_insights_suppliers__supplier_id__timeseries_get",
        "parameters": [
          {
            "name": "supplier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Supplier Id"
            }
          },
          {
            "name": "metric",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "spend",
              "title": "Metric"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Start"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "End"
            }
          },
          {
            "name": "bucket",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "month",
              "title": "Bucket"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricSeries"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/insights/suppliers/{supplier_id}/alerts": {
      "get": {
        "tags": [
          "insights"
        ],
        "summary": "Get Alerts",
        "operationId": "get_alerts_api_insights_suppliers__supplier_id__alerts_get",
        "parameters": [
          {
            "name": "supplier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Supplier Id"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Start"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "End"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsightAlertsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/forecast/items/{item_id}": {
      "get": {
        "tags": [
          "forecast"
        ],
        "summary": "Get Item Forecast",
        "operationId": "get_item_forecast_api_forecast_items__item_id__get",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "horizon",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 12,
              "minimum": 1,
              "default": 3,
              "title": "Horizon"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemForecast"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/forecast/aggregate/{scope_type}/{scope_id}": {
      "get": {
        "tags": [
          "forecast"
        ],
        "summary": "Get Aggregate Forecast",
        "operationId": "get_aggregate_forecast_api_forecast_aggregate__scope_type___scope_id__get",
        "parameters": [
          {
            "name": "scope_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Scope Type"
            }
          },
          {
            "name": "scope_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Scope Id"
            }
          },
          {
            "name": "horizon",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 12,
              "minimum": 1,
              "default": 3,
              "title": "Horizon"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AggregateForecast"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/budgets/guardrails": {
      "get": {
        "tags": [
          "budgets"
        ],
        "summary": "Get Guardrails",
        "operationId": "get_guardrails_api_budgets_guardrails_get",
        "parameters": [
          {
            "name": "scope_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Scope Type"
            }
          },
          {
            "name": "scope_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Scope Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BudgetGuardrail"
                  },
                  "title": "Response Get Guardrails Api Budgets Guardrails Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "budgets"
        ],
        "summary": "Post Guardrail",
        "operationId": "post_guardrail_api_budgets_guardrails_post",
        "parameters": [
          {
            "name": "scope_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Scope Type"
            }
          },
          {
            "name": "scope_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Scope Id"
            }
          },
          {
            "name": "period_start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Period Start"
            }
          },
          {
            "name": "period_end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Period End"
            }
          },
          {
            "name": "amount_pennies",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Amount Pennies"
            }
          },
          {
            "name": "hard_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Hard Limit"
            }
          },
          {
            "name": "created_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created By"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetGuardrail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/budgets/violations": {
      "get": {
        "tags": [
          "budgets"
        ],
        "summary": "Get Violations",
        "operationId": "get_violations_api_budgets_violations_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetViolationsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/recovery/integrity": {
      "get": {
        "tags": [
          "recovery"
        ],
        "summary": "Integrity",
        "description": "Check system integrity and return report.",
        "operationId": "integrity_api_recovery_integrity_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrityReport"
                }
              }
            }
          }
        }
      }
    },
    "/api/recovery/backups": {
      "get": {
        "tags": [
          "recovery"
        ],
        "summary": "Backups",
        "description": "List available backups.",
        "operationId": "backups_api_recovery_backups_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BackupEntry"
                  },
                  "type": "array",
                  "title": "Response Backups Api Recovery Backups Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/recovery/support-pack": {
      "post": {
        "tags": [
          "recovery"
        ],
        "summary": "Support Pack",
        "description": "Create support pack for export.",
        "operationId": "support_pack_api_recovery_support_pack_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/recovery/restore/dry-run": {
      "post": {
        "tags": [
          "recovery"
        ],
        "summary": "Restore Dry Run",
        "description": "Perform dry-run restore and return diff report.",
        "operationId": "restore_dry_run_api_recovery_restore_dry_run_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreDryRunRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiffReport-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/recovery/restore/apply": {
      "post": {
        "tags": [
          "recovery"
        ],
        "summary": "Restore Apply",
        "description": "Apply restore with conflict resolutions.",
        "operationId": "restore_apply_api_recovery_restore_apply_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiffReport-Input"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/recovery/license/upload": {
      "post": {
        "tags": [
          "recovery"
        ],
        "summary": "Upload License",
        "description": "Upload and verify license file.",
        "operationId": "upload_license_api_recovery_license_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_license_api_recovery_license_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "description": "Login with email and create session.",
        "operationId": "login_api_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get Current User Info",
        "description": "Get current user information.",
        "operationId": "get_current_user_info_api_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/permissions": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get My Permissions",
        "description": "Get current user's permissions at current venue.",
        "operationId": "get_my_permissions_api_auth_permissions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/roles": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "List Roles",
        "description": "List all roles with their permissions.",
        "operationId": "list_roles_api_roles_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RoleWithPerms"
                  },
                  "type": "array",
                  "title": "Response List Roles Api Roles Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "roles"
        ],
        "summary": "Create Role",
        "description": "Create a new role.",
        "operationId": "create_role_api_roles_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleWithPerms"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/{role_id}": {
      "patch": {
        "tags": [
          "roles"
        ],
        "summary": "Update Role",
        "description": "Update a role.",
        "operationId": "update_role_api_roles__role_id__patch",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Role Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleWithPerms"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/permissions": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "List Permissions",
        "description": "List all available permissions.",
        "operationId": "list_permissions_api_roles_permissions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List Users",
        "description": "List all users.",
        "operationId": "list_users_api_users_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "type": "array",
                  "title": "Response List Users Api Users Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Create a new user.",
        "operationId": "create_user_api_users_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/venues": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List Venues",
        "description": "List all venues.",
        "operationId": "list_venues_api_users_venues_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/assignments": {
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Assign Role",
        "description": "Assign a role to a user at a venue.",
        "operationId": "assign_role_api_assignments_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleAssignment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "assignments"
        ],
        "summary": "Unassign Role",
        "description": "Remove a role from a user at a venue.",
        "operationId": "unassign_role_api_assignments_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/assignments/user/{user_id}": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "Get User Assignments",
        "description": "Get all role assignments for a user.",
        "operationId": "get_user_assignments_api_assignments_user__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/updates/available": {
      "get": {
        "tags": [
          "updates"
        ],
        "summary": "Available Updates",
        "description": "List available update bundles.",
        "operationId": "available_updates_api_updates_available_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UpdateBundle"
                  },
                  "type": "array",
                  "title": "Response Available Updates Api Updates Available Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/updates/verify/{bundle_id}": {
      "post": {
        "tags": [
          "updates"
        ],
        "summary": "Verify Bundle",
        "description": "Verify a specific bundle (GM only).",
        "operationId": "verify_bundle_api_updates_verify__bundle_id__post",
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Bundle Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBundle"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/updates/apply/{bundle_id}": {
      "post": {
        "tags": [
          "updates"
        ],
        "summary": "Apply Update",
        "description": "Apply an update (GM only).",
        "operationId": "apply_update_api_updates_apply__bundle_id__post",
        "parameters": [
          {
            "name": "bundle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Bundle Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/updates/rollback/{changelog_id}": {
      "post": {
        "tags": [
          "updates"
        ],
        "summary": "Rollback Update",
        "description": "Rollback to a previous version (GM only).",
        "operationId": "rollback_update_api_updates_rollback__changelog_id__post",
        "parameters": [
          {
            "name": "changelog_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Changelog Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/updates/changelog": {
      "get": {
        "tags": [
          "updates"
        ],
        "summary": "Get Changelog",
        "description": "Get changelog entries.",
        "operationId": "get_changelog_api_updates_changelog_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ChangelogEntry"
                  },
                  "type": "array",
                  "title": "Response Get Changelog Api Updates Changelog Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/gm/dashboard/summary": {
      "get": {
        "tags": [
          "gm-dashboard"
        ],
        "summary": "Get Dashboard Summary",
        "description": "Get dashboard summary for user's accessible venues.",
        "operationId": "get_dashboard_summary_api_gm_dashboard_summary_get",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Start date (YYYY-MM-DD)",
              "title": "Start"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "End date (YYYY-MM-DD)",
              "title": "End"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/gm/dashboard/refresh": {
      "post": {
        "tags": [
          "gm-dashboard"
        ],
        "summary": "Refresh Dashboard Data",
        "description": "Refresh KPI data for specified venues.",
        "operationId": "refresh_dashboard_data_api_gm_dashboard_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/gm/dashboard/venues": {
      "get": {
        "tags": [
          "gm-dashboard"
        ],
        "summary": "Get Accessible Venues",
        "description": "Get list of venues accessible to current user.",
        "operationId": "get_accessible_venues_api_gm_dashboard_venues_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/gm/dashboard/kpis/{venue_id}": {
      "get": {
        "tags": [
          "gm-dashboard"
        ],
        "summary": "Get Venue Kpis",
        "description": "Get detailed KPIs for a specific venue.",
        "operationId": "get_venue_kpis_api_gm_dashboard_kpis__venue_id__get",
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Venue Id"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Start date (YYYY-MM-DD)",
              "title": "Start"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "End date (YYYY-MM-DD)",
              "title": "End"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dev/clear-documents": {
      "delete": {
        "tags": [
          "development"
        ],
        "summary": "Clear All Documents",
        "description": "Development-only endpoint to clear all document records from the database.\nThis should only be accessible in development mode.",
        "operationId": "clear_all_documents_api_dev_clear_documents_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/contracts/invoices": {
      "get": {
        "tags": [
          "contracts",
          "contracts"
        ],
        "summary": "List Invoices Contracts",
        "operationId": "list_invoices_contracts_api_contracts_invoices_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  },
                  "type": "array",
                  "title": "Response List Invoices Contracts Api Contracts Invoices Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/contracts/delivery-notes": {
      "get": {
        "tags": [
          "contracts",
          "contracts"
        ],
        "summary": "List Delivery Notes Contracts",
        "operationId": "list_delivery_notes_contracts_api_contracts_delivery_notes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DeliveryNote"
                  },
                  "type": "array",
                  "title": "Response List Delivery Notes Contracts Api Contracts Delivery Notes Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/contracts/flagged-issues": {
      "get": {
        "tags": [
          "contracts",
          "contracts"
        ],
        "summary": "List Flagged Issues Contracts",
        "operationId": "list_flagged_issues_contracts_api_contracts_flagged_issues_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FlaggedIssue"
                  },
                  "type": "array",
                  "title": "Response List Flagged Issues Contracts Api Contracts Flagged Issues Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/contracts/suppliers": {
      "get": {
        "tags": [
          "contracts",
          "contracts"
        ],
        "summary": "List Suppliers Contracts",
        "operationId": "list_suppliers_contracts_api_contracts_suppliers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Supplier"
                  },
                  "type": "array",
                  "title": "Response List Suppliers Contracts Api Contracts Suppliers Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/contracts/users": {
      "get": {
        "tags": [
          "contracts",
          "contracts"
        ],
        "summary": "List Users Contracts",
        "operationId": "list_users_contracts_api_contracts_users_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "type": "array",
                  "title": "Response List Users Contracts Api Contracts Users Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/flagged-issues": {
      "get": {
        "summary": "Get Flagged Issues",
        "operationId": "get_flagged_issues_api_flagged_issues_get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "supplier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Supplier"
            }
          },
          {
            "name": "date_range",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date Range"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Post Flagged Issue",
        "operationId": "post_flagged_issue_api_flagged_issues_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIssueRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/flagged-issues/group": {
      "post": {
        "summary": "Post Group Issues",
        "operationId": "post_group_issues_api_flagged_issues_group_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupIssuesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AgentRequest": {
        "properties": {
          "user_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Prompt"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "invoice_id": {
            "type": "string",
            "title": "Invoice Id"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "invoice_id",
          "role"
        ],
        "title": "AgentRequest",
        "description": "Request model for agent questions."
      },
      "AgentResponse": {
        "properties": {
          "markdown": {
            "type": "string",
            "title": "Markdown"
          },
          "actions": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Actions",
            "default": []
          },
          "confidence": {
            "type": "integer",
            "title": "Confidence",
            "default": 0
          },
          "entities": {
            "additionalProperties": true,
            "type": "object",
            "title": "Entities",
            "default": {}
          },
          "urgency": {
            "type": "string",
            "title": "Urgency",
            "default": "medium"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "markdown"
        ],
        "title": "AgentResponse",
        "description": "Response model for agent answers."
      },
      "AggregateForecast": {
        "properties": {
          "scope_type": {
            "type": "string",
            "enum": [
              "supplier",
              "category",
              "site"
            ],
            "title": "Scope Type"
          },
          "scope_id": {
            "type": "string",
            "format": "uuid",
            "title": "Scope Id"
          },
          "horizon": {
            "type": "integer",
            "maximum": 12.0,
            "minimum": 1.0,
            "title": "Horizon"
          },
          "model": {
            "type": "string",
            "enum": [
              "SES",
              "MA"
            ],
            "title": "Model"
          },
          "forecast": {
            "items": {
              "$ref": "#/components/schemas/PricePoint"
            },
            "type": "array",
            "title": "Forecast"
          },
          "band": {
            "$ref": "#/components/schemas/ForecastBand"
          }
        },
        "type": "object",
        "required": [
          "scope_type",
          "scope_id",
          "horizon",
          "model",
          "forecast",
          "band"
        ],
        "title": "AggregateForecast"
      },
      "AssignRoleRequest": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "role_id": {
            "type": "string",
            "format": "uuid",
            "title": "Role Id"
          },
          "venue_id": {
            "type": "string",
            "format": "uuid",
            "title": "Venue Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "role_id",
          "venue_id"
        ],
        "title": "AssignRoleRequest"
      },
      "BackupEntry": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes"
          },
          "checksum_sha256": {
            "type": "string",
            "title": "Checksum Sha256"
          },
          "path": {
            "type": "string",
            "title": "Path"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at",
          "size_bytes",
          "checksum_sha256",
          "path"
        ],
        "title": "BackupEntry"
      },
      "Body_check_duplicate_document_api_ocr_check_duplicate_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_check_duplicate_document_api_ocr_check_duplicate_post"
      },
      "Body_check_duplicate_file_hash_endpoint_api_validation_check_file_hash_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "db_path": {
            "type": "string",
            "title": "Db Path",
            "default": "data/owlin.db"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_check_duplicate_file_hash_endpoint_api_validation_check_file_hash_post"
      },
      "Body_check_duplicate_invoice_endpoint_api_validation_check_duplicate_post": {
        "properties": {
          "invoice_number": {
            "type": "string",
            "title": "Invoice Number"
          },
          "db_path": {
            "type": "string",
            "title": "Db Path",
            "default": "data/owlin.db"
          }
        },
        "type": "object",
        "required": [
          "invoice_number"
        ],
        "title": "Body_check_duplicate_invoice_endpoint_api_validation_check_duplicate_post"
      },
      "Body_classify_document_api_ocr_classify_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_classify_document_api_ocr_classify_post"
      },
      "Body_generate_invoice_name_endpoint_api_validation_generate_name_post": {
        "properties": {
          "supplier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supplier"
          },
          "date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          },
          "invoice_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Number"
          }
        },
        "type": "object",
        "title": "Body_generate_invoice_name_endpoint_api_validation_generate_name_post"
      },
      "Body_parse_document_api_ocr_parse_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_parse_document_api_ocr_parse_post"
      },
      "Body_parse_document_enhanced_api_ocr_enhanced_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_parse_document_enhanced_api_ocr_enhanced_post"
      },
      "Body_parse_receipt_document_alias_api_ocr_parse_receipt_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_parse_receipt_document_alias_api_ocr_parse_receipt_post"
      },
      "Body_parse_receipt_document_api_ocr_parse_receipt_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_parse_receipt_document_api_ocr_parse_receipt_post"
      },
      "Body_quick_validation_check_api_validation_quick_check_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "max_file_size_mb": {
            "type": "integer",
            "title": "Max File Size Mb",
            "default": 50
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_quick_validation_check_api_validation_quick_check_post"
      },
      "Body_test_ocr_api_test_ocr_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_test_ocr_api_test_ocr_post"
      },
      "Body_upload_and_match_pair_api_matching_upload_pair_post": {
        "properties": {
          "invoice_file": {
            "type": "string",
            "format": "binary",
            "title": "Invoice File"
          },
          "delivery_file": {
            "type": "string",
            "format": "binary",
            "title": "Delivery File"
          },
          "threshold": {
            "type": "number",
            "title": "Threshold",
            "default": 0.8
          },
          "normalize_descriptions": {
            "type": "boolean",
            "title": "Normalize Descriptions",
            "default": true
          },
          "save_debug": {
            "type": "boolean",
            "title": "Save Debug",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "invoice_file",
          "delivery_file"
        ],
        "title": "Body_upload_and_match_pair_api_matching_upload_pair_post"
      },
      "Body_upload_batch_enhanced_api_upload_batch_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          },
          "parse_templates": {
            "type": "boolean",
            "title": "Parse Templates",
            "default": true
          },
          "save_debug": {
            "type": "boolean",
            "title": "Save Debug",
            "default": false
          },
          "user_role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Role"
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_upload_batch_enhanced_api_upload_batch_post"
      },
      "Body_upload_delivery_notes_api_delivery_notes_upload_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_upload_delivery_notes_api_delivery_notes_upload_post"
      },
      "Body_upload_document_adaptive_api_upload_adaptive_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "parse_templates": {
            "type": "boolean",
            "title": "Parse Templates",
            "default": true
          },
          "save_debug": {
            "type": "boolean",
            "title": "Save Debug",
            "default": false
          },
          "user_role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Role"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_document_adaptive_api_upload_adaptive_post"
      },
      "Body_upload_document_enhanced_api_upload_enhanced_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "parse_templates": {
            "type": "boolean",
            "title": "Parse Templates",
            "default": true
          },
          "save_debug": {
            "type": "boolean",
            "title": "Save Debug",
            "default": false
          },
          "user_role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Role"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_document_enhanced_api_upload_enhanced_post"
      },
      "Body_upload_for_review_api_upload_review_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_for_review_api_upload_review_post"
      },
      "Body_upload_invoice_api_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_invoice_api_upload_post"
      },
      "Body_upload_license_api_recovery_license_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_license_api_recovery_license_upload_post"
      },
      "Body_validate_upload_file_api_validation_check_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "db_path": {
            "type": "string",
            "title": "Db Path",
            "default": "data/owlin.db"
          },
          "max_file_size_mb": {
            "type": "integer",
            "title": "Max File Size Mb",
            "default": 50
          },
          "process_document": {
            "type": "boolean",
            "title": "Process Document",
            "default": true
          },
          "parse_templates": {
            "type": "boolean",
            "title": "Parse Templates",
            "default": true
          },
          "save_debug": {
            "type": "boolean",
            "title": "Save Debug",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_validate_upload_file_api_validation_check_post"
      },
      "BudgetGuardrail": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "scope_type": {
            "type": "string",
            "enum": [
              "item",
              "supplier",
              "category",
              "site"
            ],
            "title": "Scope Type"
          },
          "scope_id": {
            "type": "string",
            "format": "uuid",
            "title": "Scope Id"
          },
          "period_start": {
            "type": "string",
            "format": "date",
            "title": "Period Start"
          },
          "period_end": {
            "type": "string",
            "format": "date",
            "title": "Period End"
          },
          "amount_pennies": {
            "type": "integer",
            "title": "Amount Pennies"
          },
          "hard_limit": {
            "type": "boolean",
            "title": "Hard Limit"
          },
          "created_by": {
            "type": "string",
            "format": "uuid",
            "title": "Created By"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "scope_type",
          "scope_id",
          "period_start",
          "period_end",
          "amount_pennies",
          "hard_limit",
          "created_by",
          "created_at"
        ],
        "title": "BudgetGuardrail"
      },
      "BudgetViolation": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "guardrail_id": {
            "type": "string",
            "format": "uuid",
            "title": "Guardrail Id"
          },
          "occurred_at": {
            "type": "string",
            "format": "date-time",
            "title": "Occurred At"
          },
          "projected_spend_pennies": {
            "type": "integer",
            "title": "Projected Spend Pennies"
          },
          "threshold_pennies": {
            "type": "integer",
            "title": "Threshold Pennies"
          },
          "severity": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 1.0,
            "title": "Severity"
          }
        },
        "type": "object",
        "required": [
          "id",
          "guardrail_id",
          "occurred_at",
          "projected_spend_pennies",
          "threshold_pennies",
          "severity"
        ],
        "title": "BudgetViolation"
      },
      "BudgetViolationsResponse": {
        "properties": {
          "violations": {
            "items": {
              "$ref": "#/components/schemas/BudgetViolation"
            },
            "type": "array",
            "title": "Violations"
          }
        },
        "type": "object",
        "required": [
          "violations"
        ],
        "title": "BudgetViolationsResponse"
      },
      "ChangelogEntry": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "build": {
            "type": "string",
            "title": "Build"
          },
          "applied_at": {
            "type": "string",
            "format": "date-time",
            "title": "Applied At"
          },
          "status": {
            "type": "string",
            "enum": [
              "success",
              "rollback",
              "failed"
            ],
            "title": "Status"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "id",
          "version",
          "build",
          "applied_at",
          "status"
        ],
        "title": "ChangelogEntry"
      },
      "ConfirmSplitsRequest": {
        "properties": {
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "documents": {
            "items": {
              "$ref": "#/components/schemas/ConfirmedDocument"
            },
            "type": "array",
            "title": "Documents"
          }
        },
        "type": "object",
        "required": [
          "file_name",
          "documents"
        ],
        "title": "ConfirmSplitsRequest"
      },
      "ConfirmedDocument": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "supplier_name": {
            "type": "string",
            "title": "Supplier Name"
          },
          "pages": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Pages"
          },
          "metadata": {
            "$ref": "#/components/schemas/DocumentMetadata"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "supplier_name",
          "pages",
          "metadata"
        ],
        "title": "ConfirmedDocument"
      },
      "CreateIssueRequest": {
        "properties": {
          "invoice_id": {
            "type": "string",
            "format": "uuid",
            "title": "Invoice Id"
          },
          "supplier_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supplier Id"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "severity": {
            "type": "string",
            "title": "Severity"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "invoice_id",
          "type",
          "description",
          "severity"
        ],
        "title": "CreateIssueRequest"
      },
      "CreateRoleRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "name",
          "permissions"
        ],
        "title": "CreateRoleRequest"
      },
      "CreateUserRequest": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          }
        },
        "type": "object",
        "required": [
          "email",
          "display_name"
        ],
        "title": "CreateUserRequest"
      },
      "DashboardSummary": {
        "properties": {
          "period": {
            "type": "string",
            "title": "Period"
          },
          "total_venues": {
            "type": "integer",
            "title": "Total Venues"
          },
          "total_invoices": {
            "type": "integer",
            "title": "Total Invoices"
          },
          "total_spend": {
            "type": "number",
            "title": "Total Spend"
          },
          "avg_match_rate": {
            "type": "number",
            "title": "Avg Match Rate"
          },
          "avg_confidence": {
            "type": "number",
            "title": "Avg Confidence"
          },
          "total_issues": {
            "type": "integer",
            "title": "Total Issues"
          },
          "kpi_cards": {
            "items": {
              "$ref": "#/components/schemas/KpiCard"
            },
            "type": "array",
            "title": "Kpi Cards"
          },
          "venue_comparison": {
            "items": {
              "$ref": "#/components/schemas/VenueRow"
            },
            "type": "array",
            "title": "Venue Comparison"
          },
          "trends": {
            "items": {
              "$ref": "#/components/schemas/VenueSeries"
            },
            "type": "array",
            "title": "Trends"
          }
        },
        "type": "object",
        "required": [
          "period",
          "total_venues",
          "total_invoices",
          "total_spend",
          "avg_match_rate",
          "avg_confidence",
          "total_issues",
          "kpi_cards",
          "venue_comparison",
          "trends"
        ],
        "title": "DashboardSummary"
      },
      "DeliveryNote": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "supplier_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supplier Name"
          },
          "note_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note Number"
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "parsed",
              "matched",
              "rejected"
            ],
            "title": "Status"
          },
          "ocr_confidence": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Ocr Confidence"
          },
          "matched_invoice_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matched Invoice Id"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/DnLineItem"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "id",
          "supplier_name",
          "note_number",
          "date",
          "status",
          "ocr_confidence",
          "matched_invoice_id",
          "items"
        ],
        "title": "DeliveryNote"
      },
      "DiffReport-Input": {
        "properties": {
          "backup_id": {
            "type": "string",
            "format": "uuid",
            "title": "Backup Id"
          },
          "rows": {
            "items": {
              "$ref": "#/components/schemas/RowDiff"
            },
            "type": "array",
            "title": "Rows"
          },
          "summary": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Summary"
          }
        },
        "type": "object",
        "required": [
          "backup_id",
          "rows",
          "summary"
        ],
        "title": "DiffReport"
      },
      "DiffReport-Output": {
        "properties": {
          "backup_id": {
            "type": "string",
            "format": "uuid",
            "title": "Backup Id"
          },
          "rows": {
            "items": {
              "$ref": "#/components/schemas/RowDiff"
            },
            "type": "array",
            "title": "Rows"
          },
          "summary": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Summary"
          }
        },
        "type": "object",
        "required": [
          "backup_id",
          "rows",
          "summary"
        ],
        "title": "DiffReport"
      },
      "DnLineItem": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "qty": {
            "type": "number",
            "title": "Qty"
          },
          "unit_price_pennies": {
            "type": "integer",
            "title": "Unit Price Pennies"
          },
          "total_pennies": {
            "type": "integer",
            "title": "Total Pennies"
          },
          "uom": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uom"
          },
          "sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sku"
          }
        },
        "type": "object",
        "required": [
          "id",
          "description",
          "qty",
          "unit_price_pennies",
          "total_pennies"
        ],
        "title": "DnLineItem"
      },
      "DocumentMetadata": {
        "properties": {
          "invoice_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Date"
          },
          "delivery_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivery Date"
          },
          "total_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Amount"
          },
          "invoice_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Number"
          },
          "delivery_note_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivery Note Number"
          }
        },
        "type": "object",
        "title": "DocumentMetadata"
      },
      "EscalateIssueRequest": {
        "properties": {
          "to_role": {
            "type": "string",
            "title": "To Role"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          },
          "role": {
            "type": "string",
            "title": "Role",
            "default": "GM"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "to_role"
        ],
        "title": "EscalateIssueRequest"
      },
      "FieldDiff": {
        "properties": {
          "column": {
            "type": "string",
            "title": "Column"
          },
          "old": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Old"
          },
          "new": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New"
          },
          "decision": {
            "type": "string",
            "enum": [
              "keep_old",
              "use_new",
              "manual"
            ],
            "title": "Decision",
            "default": "use_new"
          }
        },
        "type": "object",
        "required": [
          "column"
        ],
        "title": "FieldDiff"
      },
      "FlaggedIssue": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "invoice_id": {
            "type": "string",
            "format": "uuid",
            "title": "Invoice Id"
          },
          "severity": {
            "type": "string",
            "enum": [
              "low",
              "med",
              "high"
            ],
            "title": "Severity"
          },
          "kind": {
            "type": "string",
            "enum": [
              "price_change",
              "missing_item",
              "overcharge",
              "mismatch"
            ],
            "title": "Kind"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "resolved_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resolved At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "invoice_id",
          "severity",
          "kind",
          "message",
          "created_at"
        ],
        "title": "FlaggedIssue"
      },
      "ForecastBand": {
        "properties": {
          "lower": {
            "type": "number",
            "title": "Lower"
          },
          "upper": {
            "type": "number",
            "title": "Upper"
          },
          "confidence": {
            "type": "integer",
            "maximum": 99.0,
            "minimum": 50.0,
            "title": "Confidence",
            "default": 80
          }
        },
        "type": "object",
        "required": [
          "lower",
          "upper"
        ],
        "title": "ForecastBand"
      },
      "GroupIssuesRequest": {
        "properties": {
          "issue_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Issue Ids"
          },
          "group_name": {
            "type": "string",
            "title": "Group Name"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "issue_ids",
          "group_name"
        ],
        "title": "GroupIssuesRequest"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InsightAlert": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "supplier_id": {
            "type": "string",
            "format": "uuid",
            "title": "Supplier Id"
          },
          "occurred_at": {
            "type": "string",
            "format": "date-time",
            "title": "Occurred At"
          },
          "metric": {
            "type": "string",
            "title": "Metric"
          },
          "severity": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 1.0,
            "title": "Severity"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "delta_pct": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delta Pct"
          }
        },
        "type": "object",
        "required": [
          "id",
          "supplier_id",
          "occurred_at",
          "metric",
          "severity",
          "message"
        ],
        "title": "InsightAlert"
      },
      "InsightAlertsResponse": {
        "properties": {
          "supplier_id": {
            "type": "string",
            "format": "uuid",
            "title": "Supplier Id"
          },
          "alerts": {
            "items": {
              "$ref": "#/components/schemas/InsightAlert"
            },
            "type": "array",
            "title": "Alerts"
          }
        },
        "type": "object",
        "required": [
          "supplier_id",
          "alerts"
        ],
        "title": "InsightAlertsResponse"
      },
      "InsightBadge": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "tone": {
            "type": "string",
            "enum": [
              "neutral",
              "ok",
              "warn",
              "error"
            ],
            "title": "Tone"
          },
          "tooltip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tooltip"
          }
        },
        "type": "object",
        "required": [
          "label",
          "value",
          "tone"
        ],
        "title": "InsightBadge"
      },
      "InsightSummary": {
        "properties": {
          "supplier_id": {
            "type": "string",
            "format": "uuid",
            "title": "Supplier Id"
          },
          "period_start": {
            "type": "string",
            "format": "date",
            "title": "Period Start"
          },
          "period_end": {
            "type": "string",
            "format": "date",
            "title": "Period End"
          },
          "top_badges": {
            "items": {
              "$ref": "#/components/schemas/InsightBadge"
            },
            "type": "array",
            "title": "Top Badges"
          },
          "series": {
            "items": {
              "$ref": "#/components/schemas/MetricSeries"
            },
            "type": "array",
            "title": "Series"
          }
        },
        "type": "object",
        "required": [
          "supplier_id",
          "period_start",
          "period_end",
          "top_badges",
          "series"
        ],
        "title": "InsightSummary"
      },
      "IntegrityReport": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          },
          "reasons": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Reasons"
          },
          "db_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Db Version"
          },
          "last_backup_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Backup At"
          }
        },
        "type": "object",
        "required": [
          "ok",
          "reasons"
        ],
        "title": "IntegrityReport"
      },
      "Invoice": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "supplier_name": {
            "type": "string",
            "title": "Supplier Name"
          },
          "invoice_number": {
            "type": "string",
            "title": "Invoice Number"
          },
          "invoice_date": {
            "type": "string",
            "format": "date",
            "title": "Invoice Date"
          },
          "total_amount_pennies": {
            "type": "integer",
            "title": "Total Amount Pennies"
          },
          "vat_amount_pennies": {
            "type": "integer",
            "title": "Vat Amount Pennies"
          },
          "currency": {
            "type": "string",
            "const": "GBP",
            "title": "Currency"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "scanned",
              "matched",
              "flagged"
            ],
            "title": "Status"
          },
          "confidence": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Confidence"
          },
          "line_items": {
            "items": {
              "$ref": "#/components/schemas/LineItem"
            },
            "type": "array",
            "title": "Line Items"
          },
          "delivery_note_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivery Note Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "supplier_name",
          "invoice_number",
          "invoice_date",
          "total_amount_pennies",
          "vat_amount_pennies",
          "currency",
          "status",
          "confidence",
          "line_items"
        ],
        "title": "Invoice"
      },
      "ItemForecast": {
        "properties": {
          "item_id": {
            "type": "string",
            "format": "uuid",
            "title": "Item Id"
          },
          "horizon": {
            "type": "integer",
            "maximum": 12.0,
            "minimum": 1.0,
            "title": "Horizon"
          },
          "model": {
            "type": "string",
            "enum": [
              "SES",
              "MA"
            ],
            "title": "Model"
          },
          "alpha": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 0.95,
                "minimum": 0.05
              },
              {
                "type": "null"
              }
            ],
            "title": "Alpha"
          },
          "points": {
            "items": {
              "$ref": "#/components/schemas/PricePoint"
            },
            "type": "array",
            "title": "Points"
          },
          "forecast": {
            "items": {
              "$ref": "#/components/schemas/PricePoint"
            },
            "type": "array",
            "title": "Forecast"
          },
          "band": {
            "$ref": "#/components/schemas/ForecastBand"
          }
        },
        "type": "object",
        "required": [
          "item_id",
          "horizon",
          "model",
          "points",
          "forecast",
          "band"
        ],
        "title": "ItemForecast"
      },
      "KpiCard": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "delta": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delta"
          },
          "trend": {
            "type": "string",
            "enum": [
              "up",
              "down",
              "neutral"
            ],
            "title": "Trend",
            "default": "neutral"
          },
          "series": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Series",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "title",
          "value"
        ],
        "title": "KpiCard"
      },
      "LineItem": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "qty": {
            "type": "number",
            "title": "Qty"
          },
          "unit_price_pennies": {
            "type": "integer",
            "title": "Unit Price Pennies"
          },
          "total_pennies": {
            "type": "integer",
            "title": "Total Pennies"
          },
          "uom": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uom"
          },
          "sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sku"
          }
        },
        "type": "object",
        "required": [
          "id",
          "description",
          "qty",
          "unit_price_pennies",
          "total_pennies"
        ],
        "title": "LineItem"
      },
      "LoginRequest": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "LoginRequest"
      },
      "MatchConfirmRequest": {
        "properties": {
          "delivery_note_id": {
            "type": "string",
            "format": "uuid",
            "title": "Delivery Note Id"
          },
          "invoice_id": {
            "type": "string",
            "format": "uuid",
            "title": "Invoice Id"
          }
        },
        "type": "object",
        "required": [
          "delivery_note_id",
          "invoice_id"
        ],
        "title": "MatchConfirmRequest"
      },
      "MatchRejectRequest": {
        "properties": {
          "delivery_note_id": {
            "type": "string",
            "format": "uuid",
            "title": "Delivery Note Id"
          }
        },
        "type": "object",
        "required": [
          "delivery_note_id"
        ],
        "title": "MatchRejectRequest"
      },
      "MatchingResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "matching_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matching Id"
          },
          "results": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "MatchingResponse"
      },
      "MetricSeries": {
        "properties": {
          "metric": {
            "type": "string",
            "enum": [
              "spend",
              "price_volatility",
              "on_time_rate",
              "mismatch_rate",
              "confidence_median"
            ],
            "title": "Metric"
          },
          "bucket": {
            "type": "string",
            "enum": [
              "day",
              "week",
              "month"
            ],
            "title": "Bucket"
          },
          "points": {
            "items": {
              "$ref": "#/components/schemas/TimeSeriesPoint"
            },
            "type": "array",
            "title": "Points"
          }
        },
        "type": "object",
        "required": [
          "metric",
          "bucket",
          "points"
        ],
        "title": "MetricSeries"
      },
      "OkResponse": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          }
        },
        "type": "object",
        "required": [
          "ok"
        ],
        "title": "OkResponse"
      },
      "PairingRequest": {
        "properties": {
          "invoice_id": {
            "type": "string",
            "title": "Invoice Id"
          },
          "delivery_id": {
            "type": "string",
            "title": "Delivery Id"
          },
          "threshold": {
            "type": "number",
            "title": "Threshold",
            "default": 0.8
          }
        },
        "type": "object",
        "required": [
          "invoice_id",
          "delivery_id"
        ],
        "title": "PairingRequest"
      },
      "PairingResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "pairing_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pairing Id"
          },
          "results": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "PairingResponse"
      },
      "Permission": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "code",
          "description"
        ],
        "title": "Permission"
      },
      "PricePoint": {
        "properties": {
          "t": {
            "type": "string",
            "format": "date",
            "title": "T"
          },
          "p": {
            "type": "number",
            "title": "P"
          }
        },
        "type": "object",
        "required": [
          "t",
          "p"
        ],
        "title": "PricePoint"
      },
      "ProcessingStatus": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "progress_percentage": {
            "type": "number",
            "title": "Progress Percentage"
          },
          "current_step": {
            "type": "string",
            "title": "Current Step"
          },
          "estimated_time_remaining": {
            "type": "number",
            "title": "Estimated Time Remaining"
          },
          "details": {
            "additionalProperties": true,
            "type": "object",
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "status",
          "progress_percentage",
          "current_step",
          "estimated_time_remaining",
          "details"
        ],
        "title": "ProcessingStatus",
        "description": "Processing status response"
      },
      "RefreshRequest": {
        "properties": {
          "venue_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Venue Ids"
          },
          "force": {
            "type": "boolean",
            "title": "Force",
            "default": false
          }
        },
        "type": "object",
        "title": "RefreshRequest"
      },
      "RestoreDryRunRequest": {
        "properties": {
          "backup_id": {
            "type": "string",
            "format": "uuid",
            "title": "Backup Id"
          }
        },
        "type": "object",
        "required": [
          "backup_id"
        ],
        "title": "RestoreDryRunRequest"
      },
      "RoleWithPerms": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/Permission"
            },
            "type": "array",
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "permissions"
        ],
        "title": "RoleWithPerms"
      },
      "RowDiff": {
        "properties": {
          "table": {
            "type": "string",
            "title": "Table"
          },
          "pk": {
            "type": "string",
            "title": "Pk"
          },
          "diffs": {
            "items": {
              "$ref": "#/components/schemas/FieldDiff"
            },
            "type": "array",
            "title": "Diffs"
          }
        },
        "type": "object",
        "required": [
          "table",
          "pk",
          "diffs"
        ],
        "title": "RowDiff"
      },
      "SeriesPoint": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date"
          },
          "value": {
            "type": "number",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "date",
          "value"
        ],
        "title": "SeriesPoint"
      },
      "SessionInfo": {
        "properties": {
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "user",
          "expires_at"
        ],
        "title": "SessionInfo"
      },
      "SpecializedAgentRequest": {
        "properties": {
          "user_prompt": {
            "type": "string",
            "title": "User Prompt"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "invoice_id": {
            "type": "string",
            "title": "Invoice Id"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "task_type": {
            "type": "string",
            "title": "Task Type"
          }
        },
        "type": "object",
        "required": [
          "user_prompt",
          "user_id",
          "invoice_id",
          "role",
          "task_type"
        ],
        "title": "SpecializedAgentRequest",
        "description": "Request model for specialized agent tasks."
      },
      "Supplier": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "Supplier"
      },
      "TimeSeriesPoint": {
        "properties": {
          "t": {
            "type": "string",
            "format": "date",
            "title": "T"
          },
          "v": {
            "type": "number",
            "title": "V"
          },
          "n": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "N"
          }
        },
        "type": "object",
        "required": [
          "t",
          "v"
        ],
        "title": "TimeSeriesPoint"
      },
      "UpdateBundle": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "build": {
            "type": "string",
            "title": "Build"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "verified": {
            "type": "string",
            "enum": [
              "pending",
              "ok",
              "failed"
            ],
            "title": "Verified",
            "default": "pending"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "id",
          "filename",
          "version",
          "build",
          "created_at"
        ],
        "title": "UpdateBundle"
      },
      "UpdateIssueRequest": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "role": {
            "type": "string",
            "title": "Role",
            "default": "ShiftLead"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "title": "UpdateIssueRequest"
      },
      "UpdateRoleRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "permissions",
          "id"
        ],
        "title": "UpdateRoleRequest"
      },
      "UploadDNResponse": {
        "properties": {
          "delivery_notes": {
            "items": {
              "$ref": "#/components/schemas/DeliveryNote"
            },
            "type": "array",
            "title": "Delivery Notes"
          }
        },
        "type": "object",
        "required": [
          "delivery_notes"
        ],
        "title": "UploadDNResponse"
      },
      "UploadResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "document_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Id"
          },
          "processing_results": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Results"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "progress": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "UploadResponse",
        "description": "Response model for upload endpoint"
      },
      "UploadValidationResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "validation": {
            "$ref": "#/components/schemas/ValidationResponse"
          },
          "processing_results": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Results"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "success",
          "validation"
        ],
        "title": "UploadValidationResponse",
        "description": "Response model for upload validation"
      },
      "User": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "display_name",
          "is_active"
        ],
        "title": "User"
      },
      "UserRoleAssignment": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "role_id": {
            "type": "string",
            "format": "uuid",
            "title": "Role Id"
          },
          "venue_id": {
            "type": "string",
            "format": "uuid",
            "title": "Venue Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "role_id",
          "venue_id"
        ],
        "title": "UserRoleAssignment"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "ValidationResponse": {
        "properties": {
          "allowed": {
            "type": "boolean",
            "title": "Allowed"
          },
          "messages": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Messages"
          },
          "validation_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Validation Data"
          },
          "summary": {
            "additionalProperties": true,
            "type": "object",
            "title": "Summary"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "allowed",
          "messages",
          "validation_data",
          "summary",
          "metadata"
        ],
        "title": "ValidationResponse",
        "description": "Response model for validation"
      },
      "VenueRow": {
        "properties": {
          "venue_id": {
            "type": "string",
            "format": "uuid",
            "title": "Venue Id"
          },
          "venue_name": {
            "type": "string",
            "title": "Venue Name"
          },
          "total_invoices": {
            "type": "integer",
            "title": "Total Invoices"
          },
          "total_spend": {
            "type": "number",
            "title": "Total Spend"
          },
          "match_rate": {
            "type": "number",
            "title": "Match Rate"
          },
          "avg_confidence": {
            "type": "number",
            "title": "Avg Confidence"
          },
          "flagged_issues": {
            "type": "integer",
            "title": "Flagged Issues"
          },
          "delivery_reliability": {
            "type": "number",
            "title": "Delivery Reliability"
          }
        },
        "type": "object",
        "required": [
          "venue_id",
          "venue_name",
          "total_invoices",
          "total_spend",
          "match_rate",
          "avg_confidence",
          "flagged_issues",
          "delivery_reliability"
        ],
        "title": "VenueRow"
      },
      "VenueSeries": {
        "properties": {
          "venue_id": {
            "type": "string",
            "format": "uuid",
            "title": "Venue Id"
          },
          "venue_name": {
            "type": "string",
            "title": "Venue Name"
          },
          "series": {
            "items": {
              "$ref": "#/components/schemas/SeriesPoint"
            },
            "type": "array",
            "title": "Series"
          }
        },
        "type": "object",
        "required": [
          "venue_id",
          "venue_name",
          "series"
        ],
        "title": "VenueSeries"
      }
    }
  }
}