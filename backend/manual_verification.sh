#!/bin/bash
# üßä MANUAL VERIFICATION SCRIPT - STEP BY STEP
# Execute this in macOS Terminal (NOT Cursor)

echo "üßä MANUAL VERIFICATION - STEP BY STEP"
echo "======================================"

echo ""
echo "üî´ STEP 0: NUKE ZOMBIES, VERIFY PORT"
echo "-------------------------------------"
echo "Run these commands:"
echo "pkill -f 'test_server.py' || true"
echo "pkill -f 'uvicorn' || true"
echo "sleep 1"
echo "lsof -iTCP:8000 -sTCP:LISTEN -n -P || true"
echo ""
read -p "Press Enter after running these commands..."

echo ""
echo "üóÑÔ∏è STEP 1: VERIFY DB PATH USED BY THE APP"
echo "------------------------------------------"
echo "Run this command:"
echo "cd /Users/glennevans/Downloads/OWLIN-App-main-3/backend"
echo "/usr/bin/python3 -c \"from db_manager_unified import get_db_manager; m=get_db_manager(); print('DB path =', m.db_path)\""
echo ""
echo "Expected output:"
echo "DB path = /Users/glennevans/Downloads/OWLIN-App-main-3/data/owlin.db"
echo ""
read -p "Press Enter after running this command..."

echo ""
echo "üå± STEP 2: SEED MINIMAL, VALID ROWS"
echo "------------------------------------"
echo "Run this command:"
echo "/usr/bin/sqlite3 \"/Users/glennevans/Downloads/OWLIN-App-main-3/data/owlin.db\" <<'SQL'"
echo "PRAGMA foreign_keys=ON;"
echo ""
echo "INSERT OR REPLACE INTO uploaded_files"
echo "(id, original_filename, canonical_path, file_size, file_hash, mime_type,"
echo " doc_type, doc_type_confidence, upload_timestamp, processing_status, processing_progress,"
echo " created_at, updated_at)"
echo "VALUES"
echo "('seed_file', 'seed.pdf', '/tmp/seed.pdf', 123, 'deadbeef', 'application/pdf',"
echo " 'invoice', 1.0, datetime('now'), 'parsed', 100,"
echo " datetime('now'), datetime('now'));"
echo ""
echo "INSERT OR REPLACE INTO invoices"
echo "(id, file_id, total_amount_pennies, status, created_at, updated_at)"
echo "VALUES"
echo "('inv_seed', 'seed_file', 7200, 'parsed', datetime('now'), datetime('now'));"
echo ""
echo "INSERT OR REPLACE INTO invoice_line_items"
echo "(id, invoice_id, row_idx, page, description, quantity, unit_price_pennies, line_total_pennies, created_at, updated_at)"
echo "VALUES"
echo "(4001, 'inv_seed', 0, 1, 'TIA MARIA 1L', 6.0, 1200, 7200, datetime('now'), datetime('now'));"
echo "SQL"
echo ""
read -p "Press Enter after running this command..."

echo ""
echo "Verify rows exist (run these commands):"
echo "/usr/bin/sqlite3 \"/Users/glennevans/Downloads/OWLIN-App-main-3/data/owlin.db\" \"SELECT id,file_id,total_amount_pennies FROM invoices WHERE id='inv_seed';\""
echo "/usr/bin/sqlite3 \"/Users/glennevans/Downloads/OWLIN-App-main-3/data/owlin.db\" \"SELECT description,quantity,unit_price_pennies,line_total_pennies FROM invoice_line_items WHERE invoice_id='inv_seed';\""
echo ""
read -p "Press Enter after running these commands..."

echo ""
echo "üöÄ STEP 3: START THE SERVER"
echo "----------------------------"
echo "Run these commands:"
echo "cd /Users/glennevans/Downloads/OWLIN-App-main-3/backend"
echo "export OWLIN_DB_PATH=\"/Users/glennevans/Downloads/OWLIN-App-main-3/data/owlin.db\""
echo "/usr/bin/python3 test_server.py"
echo ""
echo "You should see:"
echo "‚úÖ Invoices router mounted"
echo "‚úÖ Debug router mounted"
echo "üöÄ Starting Owlin Test Server..."
echo "üìç Server will be available at: http://localhost:8000"
echo ""
read -p "Press Enter after starting the server..."

echo ""
echo "üß™ STEP 4: TEST THE EMERGENCY ENDPOINT"
echo "---------------------------------------"
echo "Run this command (shows status + headers + body):"
echo "curl -i http://localhost:8000/api/invoices/inv_seed"
echo ""
read -p "Press Enter after running this command..."

echo ""
echo "Now pretty-printed response:"
echo "curl -sS http://localhost:8000/api/invoices/inv_seed | jq '{id, meta, firstLine:.lines[0]}'"
echo ""
read -p "Press Enter after running this command..."

echo ""
echo "üîç STEP 5: VERIFY ROUTES AND DB PATH FROM THE APP"
echo "------------------------------------------------"
echo "All registered routes:"
echo "curl -s http://localhost:8000/openapi.json | jq -r '.paths | keys[]' | sort"
echo ""
read -p "Press Enter after running this command..."

echo ""
echo "App's database path view:"
echo "curl -s http://localhost:8000/api/debug/db-path | jq ."
echo ""
read -p "Press Enter after running this command..."

echo ""
echo "üéØ VERIFICATION COMPLETE"
echo "========================"
echo "Check the outputs above for:"
echo "‚úÖ HTTP 200 response (not 404)"
echo "‚úÖ JSON with id, meta, lines (not nulls)"
echo "‚úÖ Values in pounds (72.0 not 7200)"
echo "‚úÖ Routes include /api/invoices/{invoice_id}"
echo "‚úÖ DB path matches expected location"
echo ""
echo "If any step fails, the script will show exactly what went wrong." 